# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  #  pull_request:
  #    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      # --------------------  create zip --------------------
      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: zip -qq -r testarchive.zip data src mod_info.json
      # --------------------  download artifact to working directory --------------------
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: testarchive.zip
          path: path/to/artifact

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: path/to/artifact
      # -- display path of download  --
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      # --------------------  create zip --------------------
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: my-artifact
          path: path/to/artifact/ # or path/to/artifact
        