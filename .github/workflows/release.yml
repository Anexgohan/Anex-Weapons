# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release Manager

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  #pull_request:
  #  branches: [ main ]

jobs:
  build-npm:
    runs-on: ubuntu-latest
    # ----------  for multiple nodes use below  ----------
    #strategy:
    #  matrix:
    #    node-version: [12.x, 14.x, 16.x]
    #     See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    #node-version: '14'

    needs: create-release
    steps:
    # --------------------  setup NodeJS  --------------------
      - uses: actions/checkout@v2
      - name: setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run build --if-present
      #- run: npm version
      - run: npm test

      #- run: |
      #    npm install
      #    npm run build --if-present
      #    npm test

    # --------------------  Release Source  --------------------
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: "Build & test"
        run: |
          echo "done!"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            *.jar
            data
            *.json

    # --------------------  Create Artifact  --------------------
      #- name: Archive production artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: dist-without-markdown
      #    path: |
      #      dist
      #      !dist/**/*.md

      #- name: Archive code coverage results
       # uses: actions/upload-artifact@v2
        #with:
         # name: code-coverage-report
          #path: output/test/code-coverage.html
