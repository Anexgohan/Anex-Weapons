# create-src-release - this will create two src.zip with source code ignoring files & folders listed in ".gitattributes"
# build-npm - This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# create-zip-release - this will create a separate release zip file with only contents for end user, basically what you deliver to end user.
name: Release Manager
on:
  # only start if released on main branch and tagged with a tag starting with "v" without quotes e.g. v0.1.2
  push:
    branches:
      - main
  #  tags:
  #    - "v*.*.*"
  #pull_request:
  #  branches: [ main ]
jobs:
  # --------------------  setup NodeJS  --------------------
  build-npm:
    runs-on: ubuntu-latest
  #   ----------  for multiple nodes use below  ----------
  #  strategy:
  #    matrix:
  #      node-version: [12.x, 14.x, 16.x]
  #       See supported Node.js release schedule at https://nodejs.org/en/about/releases/
  #  node-version: '14'
  #  needs: create-src-release       # make sure this job runs after "create-release" job is finished
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2     # Checkout - https://github.com/actions/checkout -https://github.com/marketplace/actions/checkout
      - name: setup NodeJS
        uses: actions/setup-node@v2   # Setup Node.js environment - https://github.com/actions/setup-node - https://github.com/marketplace/actions/setup-node-js-environment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          node-version: '16'
          check-latest: true
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test       # in package.json put "npm version" under test to run a small test without any .js script, like this "test": "npm version"
  #    - run: |
  #        npm install
  #        npm run build --if-present
  #        npm test
  # --------------------  Create Zip  --------------------
      - uses: actions/checkout@v2
      - uses: papeloto/action-zip@v1
        with:
          files: data/ mod_info.json
          dest: temp/customzip.zip
  # --------------------  Release Source  --------------------
      - uses: actions/checkout@v2
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: temp/customzip.zip
          asset_name: mything
  #        release_name:
          tag: ${{ github.ref }}
          overwrite: true
          body: "This is my release text"

  # --------------------  Create Artifact  --------------------

  # --------------------  Another different Release Source script  --------------------

  # --------------------  Upload Zip  -------------------- v${{ github.run_number }}